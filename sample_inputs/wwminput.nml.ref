! This is the main input for WWM
! Other mandatory inputs: wwmbnd.gr3 (boundary flag files; see below)
! Depending on the choices of parameters below you may need additional inputs

&PROC
 PROCNAME       = 'schism_wwm_2003_test' ! Project Name
 DIMMODE        = 2                  ! Mode of run (ex: 1 = 1D, 2 = 2D) always 2D when coupled to SCHISM
 LSTEA          = F                  ! steady mode; under development
 LQSTEA         = F                  ! Quasi-Steady Mode; In this case WWM-II is doing subiterations defined as DELTC/NQSITER unless QSCONVI is not reached
 LSPHE          = T                  ! Spherical coordinates (lon/lat)
 LNAUTIN        = T                  ! Nautical convention for all inputs given in degrees 
 LNAUTOUT       = T                  ! Output in Nautical convention 
                                     ! If T, 0 is _from_ north, 90 is from east etc;
                                     ! If F, maths. convention - 0: to east; 90: going to north
 LMONO_IN       = F                  ! For prescribing monochromatic wave height Hmono as a boundary conditions; incident wave is defined as monochromatic wave height, which is Hmono = sqrt(2) * Hs
 LMONO_OUT      = F                  ! Output wave heights in terms of Lmono
 BEGTC          = '20030908.000000'  ! Time for start the simulation, ex:yyyymmdd. hhmmss
 DELTC          = 600                ! Time step (MUST match dt*nstep_wwm in SCHISM!)
 UNITC          = 'SEC'              ! Unity of time step
 ENDTC          = '20031008.000000'  ! Time for stop the simulation, ex:yyyymmdd. hhmmss
 DMIN           = 0.01              ! Minimum water depth. THis must be same as h0 in SCHISM
/

&COUPL
 LCPL           = T                  ! Couple with current model ... main switch - keep it on for SCHISM-WWM
 LROMS          = F                  ! ROMS (set as F)
 LTIMOR         = F                  ! TIMOR (set as F)
 LSHYFEM        = F                  ! SHYFEM (set as F)
 RADFLAG        = 'LON'              ! LON: Longuet-Higgin; VOR: vortex formulation
 LETOT          = F                  ! Option to compute the wave induced radiation stress. If .T. the radiation stress is based on the integrated wave spectrum
                                     ! e.g. Etot = Int,0,inf;Int,0,2*pi[N(sigma,theta)]dsigma,dtheta. If .F. the radiation stress is estimated as given in Roland et al. (2008) based
                                     ! on the directional spectra itself. It is always desirable to use .F., since otherwise the spectral informations are truncated and therefore
                                     ! LETOT = .T., is only for testing and developers!
 NLVT           = 10                 ! Number of vertical Layers; not used with SCHISM
 DTCOUP         = 600.               ! Couple time step - not used when coupled to SCHISM
! IMET_DRY       = 0                  ! 
/

&GRID
 LCIRD          = T                  ! Full circle in directional space
 LSTAG          = F                  ! Stagger directional bins with a half Dtheta; may use T only for regular grid to avoid char. line aligning with grid line
 MINDIR         = 0.                 ! Minimum direction for simulation (unit: degrees; nautical convention; 0: from N; 90: from E); not used if LCIRD = .T.
 MAXDIR         = 360.               ! Maximum direction for simulation (unit: degrees); may be < MINDIR; not used if LCIRD = .T.
 MDC            = 36                 ! Number of directional bins
 FRLOW          = 0.04               ! Low frequency limit of the discrete wave period (Hz; 1/period)
 FRHIGH         = 1.                 ! High frequency limit of the discrete wave period.
 MSC            = 36                 ! Number of frequency bins
 FILEGRID       = 'hgrid_WWM.gr3'    ! Name of the grid file. hgridi_WWM.gr3 if IGRIDTYPE = 3 (SCHISM)
 IGRIDTYPE      = 3                  ! Gridtype used.
                                     ! 1 ~ XFN system.dat
                                     ! 2 ~ WWM-PERIODIC
                                     ! 3 ~ SCHISM
                                     ! 4 ~ old WWM type 
 LSLOP          = F                  ! Bottom Slope limiter (default=F)
 SLMAX          = 0.2                ! Max Slope;
 LVAR1D         = F                  ! For 1d-mode if variable dx is used; not used with SCHISM
 LOPTSIG        = F                  ! Use optimal distributions of freq. in spectral space ... fi+1 = fi * 1.1. Take care what you high freq. limit is!
/

&INIT
 LHOTR          = F                  ! Use hotstart file (see &HOTFILE section)
 LINID          = T                  ! Initial condition; F for default; use T if using WW3 as i.c. etc
 INITSTYLE      = 2                  ! 1 - Parametric Jonswap, 2 - Read from Global NETCDF files, work only if IBOUNDFORMAT=2
/

&BOUC
 LBCSE          = T                  ! The wave boundary data is time dependent
 LBINTER        = T                  ! Do interpolation in time if LBCSE=T (not available for quasi-steady mode within the subtime steps)
 LBCWA          = T                  ! Parametric Wave Spectra
 LBCSP          = F                  ! Specify (non-parametric) wave spectra, specified in 'FILEWAVE' below
 LINHOM         = T                  ! Non-uniform wave b.c. in space
 LBSP1D         = F                  ! 1D (freq. space only) format for FILEWAVE if LBCSP=T and LINHOM=F                    
 LBSP2D         = F                  ! 2D format for FILEWAVE if LBCSP=T and LINHOM=F 
 BEGTC          = '20030908.000000'  ! Begin time of the wave boundary file (FILEWAVE) 
 DELTC          = 1                  ! Time step in FILEWAVE 
 UNITC          = 'HR'               ! Unit can be HR, MIN, SEC 
 ENDTC          = '20031008.000000'  ! End time
 FILEBOUND      = 'wwmbnd.gr3'       ! Boundary file defining boundary conditions and Neumann nodes.
                                     ! In this file there is following definition Flag 0: not on boundary; 3: Neumann (0 gradient only for advection part);
                                     ! 2: active bnd (Dirichlet). Bnd flags imported from SCHISM: ! 1: exterior bnd; -1: interior (islands)
                                     ! exterior and interior boundaries need not to be defined.
 IBOUNDFORMAT   = 3                  ! 1 ~ WWM, 3 ~ WW3 (2D spectra in netcdf format only). WW3 works only with LBCWA=T.
 FILEWAVE       = 'bndfiles.dat'     ! Boundary file defining boundary input
 LINDSPRDEG     = F                  ! If 1-d wave spectra are read this flag defines whether the input for the directional spreading is in degrees (true) or exponent (false)
 LPARMDIR       = F                  ! If LPARMDIR is true then directional spreading is read from WBDS and must be in exponential format at this time, only valid for 1d Spectra
                                     ! For WW3 boundary input also set LINHOM=T, LBCSE=T and this works only for spherical coordinates

 WBHS           = 2.                 ! Hs at the boundary for parametric spectra
 WBSS           = 2                  ! 1 or -1: Pierson-Moskowitz, 2 or -2: JONSWAP, 3 or -3: all in one BIN,
                                     ! 4: Gauss. The sign decides whether WBTP below is
                                     ! peak (+) or mean period (-)
 WBTP           = 8.                 ! Tp at the boundary (sec); mean or peak depending on the sign of WBSS
 WBDM           = 90.0               ! Avg. Wave Direction at the boundary
 WBDSMS         = 1                  ! Directional spreading value in degrees (1) or as exponent (2)
 WBDS           = 10.                ! Directional spreading at the boundary (degrees/exponent)
 WBGAUSS        = 0.1                ! factor for gaussian distribution if WBSS=1
                                     ! End section for LBCWA=T and LINHOM=F
 WBPKEN         = 3.3                ! Peak enhancement factor for Jonswap Spectra if WBSS=2
 NCDF_HS_NAME   = 'hs'               ! NETCDF var. name for the significant wave height (normally it is just 'hs')
 NCDF_DIR_NAME  = 'dir'              ! NETCDF var. name for the mean wave direction (normally it is just 'dir')
 NCDF_SPR_NAME  = 'spr'              ! NETCDF var. name for the mean directional spreading (normally it is just 'spr')
 NCDF_FP_NAME   = 'fp'               ! NETCDF var. name for the peak freq. (normally it is just 'fp')
 NCDF_F02_NAME  = 't02'              ! NETCDF var. name for the zero down crossing freq. (normally it is just 't02')
/

&WIND ! THIS IS NOW USED IN SCHISM
 LWINDFROMWWM   = F                  ! wind is coming from WWM (true) or from SCHISM(false). This is under developement. If F, the following parameters in this section are ignored. For SELFE users, use F.
 LSEWD          = F                  ! Time dependend wind input
 BEGTC          = '20030101.000000'  ! Begin time
 DELTC          = 60.0               ! Time step
 UNITC          = 'MIN'              ! Unit
 ENDTC          = '20030102.000000'  ! End time
 LINTERWD       = T                  ! Interpolate linear within the wind input time step
 LSTWD          = T                  ! Steady wind
 LCWIN          = T                  ! Constant wind
 LWDIR          = T                  ! Define wind using wind direction rather than vel. vectors
 WDIR           = 140.0              ! Wind direction if LWDIR=T
 WVEL           = 10.0               ! Wind velocity ...
 CWINDX         = 30.0               ! wind x-vec if LWDIR=F
 CWINDY         = 0.0                ! wind y-vec
 FILEWIND       = 'wind.dat'         ! wind input data file; input file format: write(*,*) curtx; write(*,*) curty               
 IWINDFORMAT    = 1                  ! kind of wind input
                                     ! 1 - ASCII,
                                     ! 2 - DWD_NETCDF
                                     ! 3 - NOAA CFRS
                                     ! 4 - NOAA NARR
                                     ! 5 - netCDF WRF/ROMS forcing (Uwind,Vwind,LON,LAT,wind_time are used), fast bilinear interp 
/

&CURR !NOT USED WITH SCHISM
 LSECU          = F                  ! Time dependend currents
 BEGTC          = '20030908.000000'  ! Beginn time
 DELTC          = 600               ! Time step
 UNITC          = 'SEC'              ! Unit
 ENDTC          = '20031008.000000'  ! End time
 LINTERCU       = F                  ! Interpolate linear within the wind input time step
 LSTCU          = F                  ! Steady current
 LCCUR          = F                  ! Constant current
 CCURTX         = 0.0                ! current x-vec
 CCURTY         = 0.0                ! current y-vec
 FILECUR        = 'current.dat'      ! Current file name; input file format: write(*,*) curtx; write(*,*) curty
 LERGINP        = F                  ! read timor file for input ... ergzus.bin
 CURFAC         = 1.000000
 ICURRFORMAT    = 1
/

&WALV !NOT USED WITH SCHISM
 LSEWL          = F                  ! Time dependend elev.
 BEGTC          = '20030908.000000'  ! Begin time
 DELTC          = 1                  ! Time step
 UNITC          = 'HR'               ! Unit
 ENDTC          = '20031008.000000'  ! End time
 LINTERWL       = F                  ! Interpolate linear within the wind input time step
 LSTWL          = T                  ! Steady water level
 LCWLV          = T                  ! Constant water level
 CWATLV         = 0.0                ! elevation of the water level [m]
 FILEWATL       = ' '                ! water level file name; input file format: write(*,*) eta
/

&ENGS !SOURCE TERMS
 MESNL          = 1   ! Nonlinear Interaction NL4 , 1 ~ on, 0 ~ off (Discrete Interaction approx.)
 MESIN          = 1   ! Wind input: Ardhuin et al. (1) (use LSOURCESWAM = F); 
                      ! for ECMWF physics (2); Makin & Stam (3); Babanin et al. (4); Cycle 3 (5); 
                      !no wind (0). Try MESIN=1, LSOURCESWAM=F or MESIN=2 and LSOURCESWAM=T
 IFRIC          = 1                  ! Formulation for atmospheric boundary layer, (IFRIC = 1 for MESIN = 1, IFRIC = 4 for MESIN=5); only used if cycle 3 is switched on
 MESBF          = 1                  ! Bottom friction: JONSWAP(1) (Default at 1); 2 - Madsen
 FRICC          = 0.067              ! Cjon - Bottom friction coefficient (always positive)
 MESBR          = 1                  ! Shallow water wave breaking; 0: off; 1: on
 ICRIT          = 1                  ! Wave breaking criterion: set as 1 - Constant gamma, 2 - Dingemans-type criterion, 3 - Miche-type criterion
 IBREAK         = 1                  ! Wave breaking formulation: 1 - Battjes and Janssen (1978), 2 - Thornton and Guza (1983), 3 - Church and Thornton (1993)
 ALPBJ          = 0.5                ! Dissipation proportionality coefficient, (DEFAULT: 0.5)
 BRHD           = 0.78               ! Wave breaking coefficient for Const. type wave breaking criterion; range: 0.6-1.1 (note: divide it by sqrt(2) for TG83)
 MEVEG          = 0                  ! Vegetation on/off
 LMAXETOT       = T                  ! Limit shallow water wave height by wave breaking limiter (default=T)
 MESDS          = 1                  ! Formulation for the whitecapping source function; same value as MESIN
 MESTR          = 1                  ! Formulation for the triad 3 wave interactions (MESTR = 0 (off), MESTR = 1 (Lumped Triad Approx. (LTA) like SWAN) (Default at 1)
 TRICO          = 0.1                ! proportionality const. (\alpha_EB); default is 0.1
 TRIRA          = 5                  ! ratio of max. freq. considered in triads over mean freq.; 2.5 is suggested
 TRIURS         = 0.1                ! critical Ursell number; if Ursell # < TRIURS; triads are not computed
 !LPRECOMPST4    = T                 ! Precompute the indices and weightings for the Ardhuin et al. formulation and save to disk, if it is .F. then the saved
                                     ! values are read from disk ! The fiels will be auto-detected, still make sure they correspond to your MSC,MDC,FRLOW,FRHIGH stuff, I add more checks soon and delete the fort.5002 file if u are not sure!
/

&NUMS
 ICOMP          = 3
                                     ! This parameter controls the way how the splitting is done and whether implicit or explicit schemes are used for spectral advection
                                     ! ICOMP = 0
                                     ! This means that all dimensions are integrated using explicit methods. Similar
                                     ! to WW3, actually the same schemes are available in WW3 4.1.
                                     ! ICOMP = 1
                                     ! This mean that advection in geographical space is done using implicit
                                     ! Methods, source terms and spectral space are still integrated as done in
                                     ! WW3.
                                     ! ICOMP = 2
                                     ! This means that the advection is done using implicit methods and that the
                                     ! source terms are integrated semi-implicit using Patankar rules and linearized
                                     ! source terms as done in SWAN. Spectral part is still a fractional step
                                     ! ICOMP = 3: fully implicit and no splitting

 AMETHOD        = 7
                                     ! AMETHOD controls the different Methods in geographical space
                                     ! AMETHOD = 0
                                     ! No Advection in geo. Space
                                     ! AMETHOD = 1
                                     ! Explicit N-Scheme for ICOMP = 0 and Implicit N-Scheme for ICOMP > 0
                                     ! AMETHOD = 2
                                     ! PSI-Scheme for ICOMP = 0 and Implicit
                                     ! Crank-Nicholson N-Scheme for ICOMP > 0
                                     ! AMETHOD = 3
                                     ! LFPSI Scheme for ICOMP = 0 and Implicit two time level N2 scheme for ICOMP > 0

                                     ! AMETHOD = 4
                                     ! Like AMETHOD = 1 but using PETSc based on small matrices MNP**2. this can be efficient on small to medium scale cluster up to say 128 Nodes.

                                     ! AMETHOD = 5
                                     ! Like AMETHOD = 1 but using PETSc and assembling the full matrix and the source terms at once (MNP * MDC * MSC)**2. number of equations
                                     ! this is for large scale applications

                                     ! Remark for AMETHOD = 4 and 5. This methods are new and only tested on a few cases where the results look reasonable and do not depend on the number of CPU's which
                                     ! validates the correct implementation. The scaling performance is anticipated to be "quite poor" at this time. Many different constituents influence the parallel speedup.
                                     ! Please let me know all the information you have in order to improve and accelerate the development of implicit parallel WWM-III.
                                     ! Have fun ... Aron and Thomas.
                                     ! AMETHOD = 6 - BCGS Solver 
                                     ! AMETHOD = 7 - GAUSS and JACOBI SOLVER 
 SMETHOD        = 1
                                     ! This switch controls the way the source terms are integrated. 0: no source terms;
                                     ! 1: splitting using RK-3 and SI for fast and slow modes 2: semi-implicit;
                                     ! 3: R-K3 (if ICOMP=0 or 1) - slow; 4: Dynamic Splitting (experimental)

 DMETHOD        = 2
                                     ! This switch controls the numerical method in directional space.
                                     ! DMETHOD = 0
                                     ! No advection in directional space
                                     ! DMETHOD = 1
                                     ! Crank-Nicholson (RTHETA = 0.5) or Euler Implicit scheme (RTHETA = 1.0)
                                     ! DMEHOD = 2
                                     ! Ultimate Quickest as in WW3 (usually best)
                                     ! DMETHOD = 3
                                     ! RK5-WENO
                                     ! DMETHOD = 4
                                     ! Explicit FVM Upwind scheme
 RTHETA         = 0.5                ! Weighing factor for DMETHOD = 1, not really useful since Crank Nicholson integration can only be monotone for CFL .le. 2
 LITERSPLIT     = F                  ! T: double Strang split; F: simple split (more efficient). Default: F

 LFILTERTH      = F
                                     ! LFILTERTH: use a CFL filter to limit the advection vel. In directional space. This is similar to WW3.
                                     ! Mostly not used. WWMII is always stable.
 MAXCFLTH       = 1.0                ! Max Cfl in Theta space; used only if LFILTERTH=T
 FMETHOD        = 1
                                     ! This switch controls the numerical method used in freq. space
                                     ! = 0
                                     ! No Advection in spectral space
                                     ! = 1
                                     ! Ultimate Quickest as in WW3 (best)
 LFILTERSIG     = F                  ! Limit the advection velocity in freq. space (usually F)
 MAXCFLSIG      = 1.0                ! Max Cfl in freq. space; used only if LFILTERSIG=T
 LLIMT          = T                  ! Switch on/off Action limiter, Action limiter must mostly be turned on.

 MELIM          = 1
                                     ! Formulation for the action limiter
                                     ! MELIM = 1 (default)
                                     ! Limiter according to the WAM group (1988)
                                     ! MELIM = 2
                                     ! Limiter according to Hersbach Janssen (1999)
                                     ! For MESIN = 1 and MESDS = 1, which represents Cycle 3 formulation or Ardhuin, or other formulations except Cycle4, use MELIM = 1 and LIMFAK = 0.1
                                     ! For MESIN = 2 and MESDS = 2, which represents Cycle 4 formulation, use MELIM = 3 and LIMFAK = 0.6

 LIMFAK         = 0.1                ! Proportionality coefficient for the action limiter MAX_DAC_DT = Limfak * Limiter; see notes above for value
 LDIFR          = F                  ! Use phase decoupled diffraction approximation according to Holthuijsen et al. (2003) (usually T; if crash, use F)
 IDIFFR         = 1                  ! Extended WAE accounting for higher order effects WAE becomes nonlinear; 1: Holthuijsen et al. ; 2: Liau et al. ; 3: Toledo et al. (in preparation)
 LCONV          = F                  ! Estimate convergence criterian and write disk (quasi-steady - qstea.out)
 LCFL           = F                  ! Write out CFL numbers; use F to save time
 NQSITER        = 1                  ! # of quasi-steady (Q-S) sub-divisions within each WWM time step (trial and errors)
 QSCONV1        = 0.98               ! Number of grid points [%/100] that have to fulfill abs. wave height criteria EPSH1
 QSCONV2        = 0.98               ! Number of grid points [%/100] that have to fulfill rel. wave height criteria EPSH2
 QSCONV3        = 0.98               ! Number of grid points [%/100] that have to fulfill sum. rel. wave action criteria EPSH3
 QSCONV4        = 0.98               ! Number of grid points [%/100] that have to fulfill rel. avg. wave steepness criteria EPSH4
 QSCONV5        = 0.98               ! Number of grid points [%/100] that have to fulfill avg. rel. wave period criteria EPSH5

 LEXPIMP        = F                  ! Use implicit schemes for freq. lower than given below by FREQEXP; used only if ICOMP=0
 FREQEXP        = 0.1                ! Minimum frequency for explicit schemes; only used if LEXPIMP=T and ICOMP=0
 EPSH1          = 0.01               ! Convergence criteria for rel. wave height ! EPSH1 < CONVK1 = REAL(ABS(HSOLD(IP)-HS2)/HS2)
 EPSH2          = 0.01               ! Convergence criteria for abs. wave height ! EPSH2 < CONVK2 = REAL(ABS(HS2-HSOLD(IP)))
 EPSH3          = 0.01               ! Convergence criteria for the rel. sum of wave action ! EPSH3 < CONVK3 = REAL(ABS(SUMACOLD(IP)-SUMAC)/SUMAC)
 EPSH4          = 0.01               ! Convergence criteria for the rel. avg. wave steepness criteria ! EPSH4 < CONVK4 = REAL(ABS(KHS2-KHSOLD(IP))/KHSOLD(IP))
 EPSH5          = 0.01               ! Convergence criteria for the rel. avg. waveperiod ! EPSH5 < REAL(ABS(TM02-TM02OLD(IP))/TM02OLD(IP))
 LVECTOR        = F                  ! Use optmized propagation routines for large high performance computers e.g. at least more than 128 CPU. Try LVECTOR=F first.
 IVECTOR        = 2                  ! USed if LVECTOR=T; Different flavours of communications
                                     ! LVECTOR = 1; same propagation style as if LVECTOR = F, this is for testing and development
                                     ! LVECTOR = 2; all spectral bins are propagated with the same time step and communications is done only once per sub-iteration
                                     ! LVECTOR = 3; all directions with the same freq. are propagated using the same time step the communications is done for each freq.
                                     ! LVECTOR = 4; 2 but for mixed open-mpi, code has to be compiled with -openmp
                                     ! LVECTOR = 5; 3 but for mixed open-mpi, code has to be compiled with -openmp
                                     ! LVECTOR = 6; same as 2 but highly optimized with respect to memory usage, of course it is must less efficient than 2
                                     ! remarks: if you are using this routines be aware that the memory amount that is used is approx. for LVECTOR 1-5 around
                                     ! 24 * MSC * MDC * MNP, so if you are trying this on 1 CPU you get a segmentation fault if your system has not enough memory or
                                     ! if your system is not properly configured it may results into the fact that your computer starts blocking since it try's to swap to disk
                                     ! The total amount of memory used per CPU = 24 * MSC * MDC * MNP / No.CPU
 LADVTEST       = F                  ! for testing the advection schemes, testcase will be added soon
 LCHKCONV       = F                  ! needs to set to .true. for quasi-steady mode. in order to compute the QSCONVi criteria and check them
 DTMIN_DYN      = 1.                 ! min. time step (sec?) for dynamic integration, this controls in SMETHOD the smallest time step for the triads, DT = 1.s is found to work well. 
 NDYNITER       = 100,               ! max. iteration for dyn. scheme afterwards the limiter is applied in the last step, for SMETHOD .eq. this controls the integration of the triad interaction terms, which is done dynamically. 
 DTMIN_SIN      = 1.                 ! min. time steps for the full fractional step method, where each source term is integrated with its own fractional step
 DTMIN_SNL4     = 1.                 !    
 DTMIN_SDS      = 1.                 !    
 DTMIN_SNL3     = 1.                 !   
 DTMIN_SBR      = 0.10               !    
 DTMIN_SBF      = 1.0                !    
 NDYNITER_SIN   = 10,       	     ! max. iterations for each source term in the fractional step approach. 
 NDYNITER_SNL4  = 10,       	     !
 NDYNITER_SDS   = 10,       	     !
 NDYNITER_SBR   = 10,        	     !
 NDYNITER_SNL3  = 10,       	     ! 
 NDYNITER_SBF   = 10,        	     !
 ZETA_METH      = 0,                 ! 0: use a simple conjugate gradient
                                     !    preconditioner
 LSOUBOUND      = F                  ! Do source terms on boundary, this is possible as long only dissipative processes are governing the spectral evolution, otherwise, with wind u will get the max. possible wave height
                                     ! based on infinie fetch ... good for harbor studies. This is efficiently used for flume experiemnts mostly since in this case one would get a gradient in the crossection due to the effect
                                     ! that source terms are not treated there.
                                     ! 1: use PETSC
 WAE_SOLVERTHR =  1.e-6,             ! Threshold for the Block-Jacobi or Block-Gauss-Seider solver
 MAXITER =         100,              ! Max. number of iterations
 PMIN    =  1.,                      ! Max. percentage of non-converged grid points
 LNANINFCHK      = F,                ! Check for NaN and INF; usually turned off for efficiency
 LZETA_SETUP     = F,                ! Compute wave setup (simple momentum eq.)
 ZETA_METH       = 0,                ! Method for wave setup, Mathieu please explain!
 LSOURCESWAM     = F,                ! Use ECMWF WAM formualtion for deep water physics. 
 LSOURCESWWIII   = F,                ! WW3 Ardhuin et al. sources, not working yet in this code- use MESIN=1
 BLOCK_GAUSS_SEIDEL = T,             ! Use the Gauss Seidel on each
                                     ! computer block. The result seems
                                     ! to be faster and use less memory
                                     ! But the # of iterations depends on the
                                     ! number of processors
 LNONL   = F                         ! Solve the nonlinear system using simpler algorithm (Patankar)
 ASPAR_LOCAL_LEVEL = 0               ! Aspar locality level
                                     ! 0 ASPAR_JAC(MSC,MDC,MNP),
                                     ! CAD_THE(MSC,MDC,MNP), CAS_SIG(MSC,MDC,MNP)
                                     ! are allocated
                                     ! 1: only ASPAR_JAC
                                     ! 2: only small local arrays.
                                     ! 3: more local 
                                     ! 4: mathieu magic 1
                                     ! 5: mathieu magic 2
 L_SOLVER_NORM = F                   ! Compute solver norm ||A*x-b|| as termination
                                     ! check of jacobi-Gauss-Seidel solver. Will increas cost if T
 LACCEL  = F
/


! output of statistical variables over the whole domain at specified times.
&HISTORY
 BEGTC          = '20030908.000000'  ! Start output time, yyyymmdd. hhmmss;
                                     ! must fit the simulation time otherwise no output.
                                     ! Default is same as PROC%BEGTC
 DELTC          = 1  ! Time step for output; if smaller than simulation time step, the latter is used (output every step for better 1D 2D spectra analysis)
 UNITC          = 'SEC'              ! Unit
 ENDTC          = '20031008.000000'  ! Stop time output, yyyymmdd. hhmmss
                                     ! Default is same as PROC%ENDC
 DEFINETC       = 86400              ! Time scoop (sec) for history files
                                     ! If unset or set to a negative value
                                     ! then only one file is generated
                                     ! otherwise, for example for 86400
                                     ! daily output files are created.
 OUTSTYLE       = 'XFN'              ! output option - use 'NO' for no output
                                     ! 'NC' for netcdf output
                                     ! 'XFN' for XFN output (default)
                                     ! 'SHP' for DARKO SHP output
 MULTIPLEOUT      = 0                ! 0: output in a single netcdf file
                                     !    MPI_reduce is used (default)
                                     ! 1: output in separate netcdf files
                                     !    each associated with one process
 USE_SINGLE_OUT  = T                 ! T: Use single precision in the
                                     !    output of model variables (default)
 PARAMWRITE      = T                 ! T: Write the physical parametrization
                                     !    and chosen numerical method
                                     !    in the netcdf file (default T)
 GRIDWRITE       = T                 ! T/F: Write the grid in the netcdf history file (default T)
 PRINTMMA        = F                 ! T/F: Print minimum, maximum and average
                                     ! value of statistics during runtime
                                     ! (Default F)
                                     ! (Requires a MPI_REDUCE)
 FILEOUT        = 'wwm_hist.dat'
                                     ! Below is selection for all variables. Default is F for all variables.
 HS             = F                  ! significant wave height
 TM01           = F                  ! mean period
 TM02           = F                  ! zero-crossing mean period
 KLM            = F                  ! mean wave number
 WLM            = F                  ! mean wave length
 ETOTC          = F                  ! Variable ETOTC
 ETOTS          = F                  ! Variable ETOTS
 DM             = F                  ! mean wave direction
 DSPR           = F                  ! directional spreading
 TPPD           = F                  ! direaction of the peak ... check source code
 TPP            = F                  ! peak period  
 CPP            = F                  ! peak phase vel. 
 WNPP           = F                  ! peak wave number
 CGPP           = F                  ! peak group speed
 KPP            = F                  ! peak wave number
 LPP            = F                  ! peak wave length 
 PEAKD          = F                  ! peak direction
 PEAKDSPR       = F                  ! peak directional spreading
 DPEAK          = F                  ! peak direction 
 UBOT           = F                  ! bottom exc. vel. 
 ORBITAL        = F                  ! bottom orbital vel. 
 BOTEXPER       = F                  ! bottom exc.  
 TMBOT          = F                  ! bottom period 
 URSELL         = F                  ! Ursell number
 UFRIC          = F                  ! air friction velocity
 Z0             = F                  ! air roughness length
 ALPHA_CH       = F                  ! Charnoch coefficient for air
 WINDX          = F                  ! Wind in X direction
 WINDY          = F                  ! Wind in Y direction
 CD             = F                  ! Drag coefficient
 CURRTX         = F                  ! current in X direction
 CURRTY         = F                  ! current in Y direction
 WATLEV         = F                  ! water level
 WATLEVOLD      = F                  ! water level at previous time step
 DEPDT          = F                  ! change of water level in time
 DEP            = F                  ! depth
 TAUW           = F                  ! surface stress from the wave
 TAUHF          = F                  ! high frequency surface stress
 TAUTOT         = F                  ! total surface stress
 STOKESSURFX    = F                  ! Surface Stokes drift in X direction
 STOKESSURFY    = F                  ! Surface Stokes drift in X direction
 STOKESBAROX    = F                  ! Barotropic Stokes drift in X direction
 STOKESBAROY    = F                  ! Barotropic Stokes drift in Y direction
 RSXX           = F                  ! RSXX potential of LH
 RSXY           = F                  ! RSXY potential of LH
 RSYY           = F                  ! RSYY potential of LH
 CFL1           = F                  ! CFL number 1
 CFL2           = F                  ! CFL number 2
 CFL3           = F                  ! CFL number 3
/

&STATION
 BEGTC          = '20030908.000000'  ! Start simulation time, yyyymmdd. hhmmss; must fit the simulation time otherwise no output
                                     ! Default is same as PROC%BEGTC
 DELTC          = 600                ! Time step for output; if smaller than simulation time step, the latter is used (output every step for better 1D 2D spectra analysis)
 UNITC          = 'SEC'              ! Unit
 ENDTC          = '20031008.000000'  ! Stop time simulation, yyyymmdd. hhmmss
                                     ! Default is same as PROC%ENDC
 DEFINETC       = 86400              ! Time for definition of station files
                                     ! If unset or set to a negative value
                                     ! then only one file is generated
                                     ! otherwise, for example for 86400
                                     ! daily output files are created.
 OUTSTYLE       = 'NO'               ! output option
                                     ! 'NO' no output
                                     ! 'STE' classic station output (default)
                                     ! 'NC' for netcdf output
 MULTIPLEOUT      = 0                ! 0: output in a single netcdf file
                                     !    MPI_reduce is used (default)
                                     ! 1: output in separate netcdf files
                                     !    each associated with one process
 USE_SINGLE_OUT  = T                 ! T: Use single precision in the
                                     !    output of model variables (default)
 PARAMWRITE      = T                 ! T: Write the physical parametrization
                                     !    and chosen numerical method
                                     !    in the netcdf file (default T)
 FILEOUT        = 'wwm_sta.dat'      !not used
 LOUTITER       = F
 IOUTS   =          15,
 NOUTS   = 'P-1', 'P-2', 'P-3', 'P-4', 'P-5', 'P-6', 'P-7', 'P-8', 'P-9', 'P-10', 'P-11', 'P-12', 'P-13', 'P-14', 'P-15'
 XOUTS  =   -76.0460000000000     ,  -76.7780000000000     ,  -75.8100000000000     ,  -75.7200000000000     ,  -74.8420000000000     ,
   -74.7030000000000     ,  -75.3300000000000     ,  -72.6310000000000     ,  -74.8350000000000     ,  -69.2480000000000     ,
   -72.6000000000000 
 YOUTS   =   39.152, 38.556,  38.033,   37.551,
    36.9740000000000     ,   37.2040000000000     ,   37.0230000000000     ,   36.9150000000000     ,   36.6110000000000     ,
    38.4610000000000     ,   35.7500000000000     ,   34.5610000000000     ,   31.8620000000000     ,   40.5030000000000     ,
    39.5840000000000
 CUTOFF         = 15*0.44            ! cutoff freq (Hz) for each station - consistent with buoys
 LSP1D          = T                  ! 1D spectral station output
 LSP2D          = F                  ! 2D spectral station output
 LSIGMAX        = T                  ! Adjust the cut-freq. for the output (e.g. consistent with buoy cut-off freq.)
 AC             = F                  ! spectrum 
 WK             = F                  ! variable WK
 ACOUT_1D       = F                  ! variable ACOUT_1D
 ACOUT_2D       = F                  ! variable ACOUT_2D
 HS             = F                  ! significant wave height
 TM01           = F                  ! mean period
 TM02           = F                  ! zero-crossing mean period
 KLM            = F                  ! mean wave number
 WLM            = F                  ! mean wave length
 ETOTC          = F                  ! Variable ETOTC
 ETOTS          = F                  ! Variable ETOTS
 DM             = F                  ! mean wave direction
 DSPR           = F                  ! directional spreading
 TPPD           = F                  ! Discrete Peak Period
 TPP            = F                  ! Peak Period
 CPP            = F
 WNPP           = F                  ! peak wave number
 CGPP           = F                  ! peak group speed
 KPP            = F                  ! peak wave number
 LPP            = F                  ! peak
 PEAKD          = F                  ! peak direction
 PEAKDSPR       = F                  ! peak directional spreading
 DPEAK          = F
 UBOT           = F
 ORBITAL        = F
 BOTEXPER       = F
 TMBOT          = F
 URSELL         = F                  ! Ursell number
 UFRIC          = F                  ! air friction velocity
 Z0             = F                  ! air roughness length
 ALPHA_CH       = F                  ! Charnoch coefficient for air
 WINDX          = F                  ! Wind in X direction
 WINDY          = F                  ! Wind in Y direction
 CD             = F                  ! Drag coefficient
 CURRTX         = F                  ! current in X direction
 CURRTY         = F                  ! current in Y direction
 WATLEV         = F                  ! water level
 WATLEVOLD      = F                  ! water level at previous time step
 DEPDT          = F                  ! change of water level in time
 DEP            = F                  ! depth
 TAUW           = F                  ! surface stress from the wave
 TAUHF          = F                  ! high frequency surface stress
 TAUTOT         = F                  ! total surface stress
 STOKESSURFX    = F                  ! Surface Stokes drift in X direction
 STOKESSURFY    = F                  ! Surface Stokes drift in X direction
 STOKESBAROX    = F                  ! Barotropic Stokes drift in X direction
 STOKESBAROY    = F                  ! Barotropic Stokes drift in Y direction
 RSXX           = F                  ! RSXX potential of LH
 RSXY           = F                  ! RSXY potential of LH
 RSYY           = F                  ! RSYY potential of LH
 CFL1           = F                  ! CFL number 1
 CFL2           = F                  ! CFL number 2
 CFL3           = F                  ! CFL number 3
/

&HOTFILE
 LHOTF          = F                  ! Write hotfile
 FILEHOT_OUT    = 'wwm_hot_out'      !'.nc' suffix will be added 
 BEGTC          = '20030908.000000'  !Starting time of hotfile writing. With ihot!=0 in SCHISM,
                                     !this will be whatever the new hotstarted time is (even with ihot=2)
 DELTC          = 86400.             ! time between hotfile writes
 UNITC          = 'SEC'              ! unit used above
 ENDTC          = '20031008.000000'  ! Ending time of hotfile writing (adjust with BEGTC)
 LCYCLEHOT      = T                  ! Applies only to netcdf
                                     ! If T then hotfile contains 2 last records.
                                     ! If F then hotfile contains N record if N outputs
                                     ! have been done
                                     ! For binary only one record.
 HOTSTYLE_OUT   = 2                  ! 1: binary hotfile of data as output
                                     ! 2: netcdf hotfile of data as output (default)
 MULTIPLEOUT    = 0                  ! 0: hotfile in a single file (binary or netcdf)
                                     !  MPI_REDUCE is then used and thus you'd avoid too freq. output 
                                     ! 1: hotfiles in separate files, each associated
                                     ! with one process
 FILEHOT_IN     = 'wwm_hot_in.nc'    ! (Full) hot file name for input
 HOTSTYLE_IN    = 2                  ! 1: binary hotfile of data as input
                                     ! 2: netcdf hotfile of data as input (default)
 IHOTPOS_IN     = 1                  ! Position in hotfile (only for netcdf)
                                     ! for reading
 MULTIPLEIN     = 0                  ! 0: read hotfile from one single file
                                     ! 1: read hotfile from multiple files (must use same # of CPU?)
/

! only used with AMETHOD 4 or 5
&PETScOptions
                                     ! Summary of Sparse Linear Solvers Available from PETSc: http://www.mcs.anl.gov/petsc/documentation/linearsolvertable.html
 KSPTYPE       = 'LGMRES'
                                     ! This parameter controls which solver is used. This is the same as petsc command line parameter -ksp_type.
                                     ! KSPTYPE = 'GMRES'
                                     ! Implements the Generalized Minimal Residual method. (Saad and Schultz, 1986) with restart
                                     ! KSPTYPE = 'LGMRES'
                                     ! Augments the standard GMRES approximation space with approximations to the error from previous restart cycles.
                                     ! KSPTYPE = 'DGMRES'
                                     ! In this implementation, the adaptive strategy allows to switch to the deflated GMRES when the stagnation occurs.
                                     ! KSPTYPE = 'PGMRES'
                                     ! Implements the Pipelined Generalized Minimal Residual method. Only PETSc 3.3
                                     ! KSPTYPE = 'KSPBCGSL'
                                     ! Implements a slight variant of the Enhanced BiCGStab(L) algorithm

 RTOL          = 1.E-20              ! the relative convergence tolerance (relative decrease in the residual norm)
 ABSTOL        = 1.E-20              ! the absolute convergence tolerance (absolute size of the residual norm)
 DTOL          = 10000.              ! the divergence tolerance
 MAXITS        = 1000                ! maximum number of iterations to use

 INITIALGUESSNONZERO = F             ! Tells the iterative solver that the initial guess is nonzero; otherwise KSP assumes the initial guess is to be zero
 GMRESPREALLOCATE    = T             ! Causes GMRES and FGMRES to preallocate all its needed work vectors at initial setup rather than the default, which is to allocate them in chunks when needed.


 PCTYPE        = 'SOR'
                                     ! This parameter controls which  preconditioner is used. This is the same as petsc command line parameter -pc_type
                                     ! PCTYPE = 'SOR'
                                     ! (S)SOR (successive over relaxation, Gauss-Seidel) preconditioning
                                     ! PCTYPE = 'ASM'
                                     ! Use the (restricted) additive Schwarz method, each block is (approximately) solved with its own KSP object.
                                     ! PCTYPE = 'HYPRE'
                                     ! Allows you to use the matrix element based preconditioners in the LLNL package hypre
                                     ! PCTYPE = 'SPAI'
                                     ! Use the Sparse Approximate Inverse method of Grote and Barnard as a preconditioner
                                     ! PCTYPE = 'NONE'
                                     ! This is used when you wish to employ a nonpreconditioned Krylov method.
/

&NESTING
/
 ListBEGTC =''
 ListDELTC = ZERO
 ListUNITC =''
 ListENDTC =''
 ListIGRIDTYPE =0
 ListFILEGRID =''
 ListFILEBOUND =''
 ListPrefix =''
/
